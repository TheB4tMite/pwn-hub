reg[0] = our_input[0]
reg[15] = 4
all flags = 0
reg[15] = 1; if reg[0]==reg[15]
reg[17] = 1; if reg[0]<reg[15]
reg[16] = 1; if reg[0]>reg[15]
if (flag1:1 == 0): 
reg[1] = our_input[-1]
reg[2] = our_input[-2]
reg[3] = our_input[-3]
reg[4] = our_input[-4]
reg[8] = 19
reg[9] = 55
reg[10] = 1
reg[11] = 240
reg[12] = 15
reg[13] = 144
reg[7] = 173
all flags = 0
reg[15] = 1; if reg[2]==reg[7]
reg[17] = 1; if reg[2]<reg[7]
reg[16] = 1; if reg[2]>reg[7]
if (flag1:0 == 0): 
(44, 7)
reg[1] ^= reg[9]
reg[7] = 233
all flags = 0
reg[15] = 1; if reg[1]==reg[7]
reg[17] = 1; if reg[1]<reg[7]
reg[16] = 1; if reg[1]>reg[7]
if (flag1:0 == 0): 
(55, 7)
reg[4] ^= reg[8]
reg[4] ^= reg[9]
reg[7] = 203
all flags = 0
reg[15] = 1; if reg[4]==reg[7]
reg[17] = 1; if reg[4]<reg[7]
reg[16] = 1; if reg[4]>reg[7]
if (flag1:0 == 0): 
(68, 7)
reg[3] ^= reg[13]
reg[3] ^= reg[12]
reg[3] ^= reg[9]
reg[7] = 22
all flags = 0
reg[15] = 1; if reg[3]==reg[7]
reg[17] = 1; if reg[3]<reg[7]
reg[16] = 1; if reg[3]>reg[7]
if (flag1:0 == 0): 
(83, 22)
[20, 1, 21, 14, 20, 20, 20, 20, 1, 1, 1, 1, 1, 1, 1, 21, 14, 7, 1, 21, 14, 7, 7, 1, 21, 14, 7, 7, 7, 1, 21, 14, 22]
return val: 0